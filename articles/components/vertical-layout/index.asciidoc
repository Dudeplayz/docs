---
title: Vertical Layout
page-links:
  - 'API: https://cdn.vaadin.com/vaadin-web-components/{moduleNpmVersion:@vaadin/ordered-layout}/#/elements/vaadin-vertical-layout[TypeScript] / https://vaadin.com/api/platform/{moduleMavenVersion:com.vaadin:vaadin}/com/vaadin/flow/component/orderedlayout/VerticalLayout.html[Java]'
  - 'Source: https://github.com/vaadin/web-components/tree/v{moduleNpmVersion:@vaadin/ordered-layout}/packages/vertical-layout[TypeScript] / https://github.com/vaadin/flow-components/tree/{moduleMavenVersion:com.vaadin:vaadin}/vaadin-ordered-layout-flow-parent[Java]'
---

= Vertical Layout

Vertical Layout places components top-to-bottom in a column.
By default, it has 100% width and undefined height, meaning its width is constrained by its parent component and its height is determined by the components it contains.
See <<../horizontal-layout#, Horizontal Layout>> for placing components side-by-side.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/basiclayouts/basic-layouts-vertical-layout.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/basiclayouts/BasicLayoutsVerticalLayout.java[render,tags=snippet,indent=0,group=Java]
----
--

Components in a Vertical Layout can be aligned both vertically and horizontally.

== Vertical Alignment

You can position components at the top, middle, or bottom.
You can also position components by specifying how the excess space (if any) in a layout is distributed between them.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/basiclayouts/basic-layouts-vertical-layout-vertical-alignment.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/basiclayouts/BasicLayoutsVerticalLayoutVerticalAlignment.java[render,tags=layout,indent=0,group=Java]
----
--

|===
|Value |Description

|`START` (default)
|Positions items at the top.

|`CENTER`
|Vertically centers items.

|`END`
|Positions items at the bottom.

|`BETWEEN`
|Available space is distributed evenly between items.
No space is added before the first item, or after the last.

|`AROUND`
|Available space is distributed evenly between items.
The space before the first item, and after the last, is half of that between items.

|`EVENLY`
|Available space is distributed evenly between items.
The space before the first item, between items and after the last item is the same.
|===

== Horizontal Alignment

Components in a Vertical Layout can be left-aligned (default), centered, right-aligned or stretched horizontally.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/basiclayouts/basic-layouts-vertical-layout-horizontal-alignment.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/basiclayouts/BasicLayoutsVerticalLayoutHorizontalAlignment.java[render,tags=layout,indent=0,group=Java]
----
--

|===
|Value |Description

|`START` (default)
|Left-aligns (in left-to-right languages) or right-aligns (in right-to-left languages) items

|`CENTER`
|Horizontally centers items

|`END`
|Right-aligns (in left-to-right languages) or left-aligns (in right-to-left languages) items

|`STRETCH`
|Stretches items with undefined width horizontally
|===

It's also possible to horizontally align individual components, overriding the alignment set by the parent layout.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/basiclayouts/basic-layouts-vertical-layout-individual-alignment.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/basiclayouts/BasicLayoutsVerticalLayoutIndividualAlignment.java[render,tags=layout,indent=0,group=Java]
----
--

== Spacing

Spacing is used to create space between components in the same layout.
Spacing can help prevent mis-clicks and distinguish content areas.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/basiclayouts/basic-layouts-spacing.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/basiclayouts/BasicLayoutsSpacing.java[render,tags=snippet,indent=0,group=Java]
----
--

Five different spacing theme variants are available:

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/basiclayouts/basic-layouts-spacing-variants.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/basiclayouts/BasicLayoutsSpacingVariants.java[render,tags=snippet,indent=0,group=Java]
----
--

|===
|Theme variant |Usage recommendations

|`spacing-xs`
|Extra-small space between items

|`spacing-s`
|Small space between items

|`spacing`
|Medium space between items

|`spacing-l`
|Large space between items

|`spacing-xl`
|Extra-large space between items
|===

[.example]
--

[source,typescript]
----
<vaadin-vertical-layout
  theme="spacing-xs padding">
</vaadin-vertical-layout>
----

[source,java]
----
VerticalLayout layout = new VerticalLayout();
layout.setSpacing(false);
layout.getThemeList().add("spacing-xs");
----

--
== Padding

Padding is the space between the outer border and the content in a layout.
Padding can help distinguish a the content in a layout from its surrounding.
Padding is applied using the padding theme variant.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/basiclayouts/basic-layouts-padding.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/basiclayouts/BasicLayoutsPadding.java[render,tags=snippet,indent=0,group=Java]
----
--

== Margin

Use margin to create space around a layout.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/basiclayouts/basic-layouts-margin.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/basiclayouts/BasicLayoutsMargin.java[render,tags=snippet,indent=0,group=Java]
----
--


[discussion-id]`73cc0e40-d39a-11ed-afa1-0242ac120002`